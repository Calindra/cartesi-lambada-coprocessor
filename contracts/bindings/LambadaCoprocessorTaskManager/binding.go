// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractLambadaCoprocessorTaskManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// ILambadaCoprocessorTaskManagerTask is an auto generated low-level Go binding around an user-defined struct.
type ILambadaCoprocessorTaskManagerTask struct {
	ProgramId []byte
	InputHash []byte
}

// ILambadaCoprocessorTaskManagerTaskBatch is an auto generated low-level Go binding around an user-defined struct.
type ILambadaCoprocessorTaskManagerTaskBatch struct {
	Index                     uint32
	BlockNumber               uint32
	MerkeRoot                 [32]byte
	QuorumNumbers             []byte
	QuorumThresholdPercentage uint32
}

// ILambadaCoprocessorTaskManagerTaskResponse is an auto generated low-level Go binding around an user-defined struct.
type ILambadaCoprocessorTaskManagerTaskResponse struct {
	OutputHash [32]byte
}

// OperatorStateRetrieverCheckSignaturesIndices is an auto generated low-level Go binding around an user-defined struct.
type OperatorStateRetrieverCheckSignaturesIndices struct {
	NonSignerQuorumBitmapIndices []uint32
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// OperatorStateRetrieverOperator is an auto generated low-level Go binding around an user-defined struct.
type OperatorStateRetrieverOperator struct {
	Operator   common.Address
	OperatorId [32]byte
	Stake      *big.Int
}

// ContractLambadaCoprocessorTaskManagerMetaData contains all meta data concerning the ContractLambadaCoprocessorTaskManager contract.
var ContractLambadaCoprocessorTaskManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_taskResponseWindowBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"TASK_RESPONSE_WINDOW_BLOCK\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"aggregator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"allBatchHashes\",\"inputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"allTaskOutputs\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blsApkRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIBLSApkRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"checkSignatures\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"generator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getCheckSignaturesIndices\",\"inputs\":[{\"name\":\"registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"nonSignerOperatorIds\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structOperatorStateRetriever.CheckSignaturesIndices\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorState\",\"inputs\":[{\"name\":\"registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"blockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple[][]\",\"internalType\":\"structOperatorStateRetriever.Operator[][]\",\"components\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stake\",\"type\":\"uint96\",\"internalType\":\"uint96\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorState\",\"inputs\":[{\"name\":\"registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"operatorId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"blockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"\",\"type\":\"tuple[][]\",\"internalType\":\"structOperatorStateRetriever.Operator[][]\",\"components\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorId\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"stake\",\"type\":\"uint96\",\"internalType\":\"uint96\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getQuorumBitmapsAtBlockNumber\",\"inputs\":[{\"name\":\"registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"operatorIds\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"blockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\",\"internalType\":\"uint256[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskOutputHash\",\"inputs\":[{\"name\":\"batchIndex\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"programId\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"taskInputHash\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_pauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"initialOwner\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_aggregator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_generator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"nextBatchIndex\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pauseAll\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauserRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerNewTaskBatch\",\"inputs\":[{\"name\":\"batchRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registryCoordinator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"respondTask\",\"inputs\":[{\"name\":\"batch\",\"type\":\"tuple\",\"internalType\":\"structILambadaCoprocessorTaskManager.TaskBatch\",\"components\":[{\"name\":\"index\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"merkeRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"task\",\"type\":\"tuple\",\"internalType\":\"structILambadaCoprocessorTaskManager.Task\",\"components\":[{\"name\":\"programId\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"inputHash\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"taskProof\",\"type\":\"bytes32[]\",\"internalType\":\"bytes32[]\"},{\"name\":\"taskResponse\",\"type\":\"tuple\",\"internalType\":\"structILambadaCoprocessorTaskManager.TaskResponse\",\"components\":[{\"name\":\"outputHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPauserRegistry\",\"inputs\":[{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setStaleStakesForbidden\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"stakeRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"staleStakesForbidden\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"trySignatureAndApkVerification\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[{\"name\":\"pairingSuccessful\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"siganatureIsValid\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"unpause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Paused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PauserRegistrySet\",\"inputs\":[{\"name\":\"pauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StaleStakesForbiddenUpdate\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskBatchRegistered\",\"inputs\":[{\"name\":\"batch\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structILambadaCoprocessorTaskManager.TaskBatch\",\"components\":[{\"name\":\"index\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"blockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"merkeRoot\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskResponded\",\"inputs\":[{\"name\":\"responseMetaHash\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"},{\"name\":\"response\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structILambadaCoprocessorTaskManager.TaskResponse\",\"components\":[{\"name\":\"outputHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Unpaused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false}]",
	Bin: "0x6101206040523480156200001257600080fd5b50604051620059e2380380620059e28339810160408190526200003591620001f7565b81806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b591906200023e565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200010d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013391906200023e565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663df5cf7236040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b391906200023e565b6001600160a01b031660e052506097805460ff1916600117905563ffffffff16610100525062000265565b6001600160a01b0381168114620001f457600080fd5b50565b600080604083850312156200020b57600080fd5b82516200021881620001de565b602084015190925063ffffffff811681146200023357600080fd5b809150509250929050565b6000602082840312156200025157600080fd5b81516200025e81620001de565b9392505050565b60805160a05160c05160e05161010051615700620002e260003960006102510152600081816104f501526121eb0152600081816103c201526123cd0152600081816103e9015281816125a3015261276501526000818161041001528181610fdb01528181611eb60152818161204e015261228801526157006000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063683048351161010f5780638da5cb5b116100a2578063f2fde38b11610071578063f2fde38b14610517578063f8c8765e1461052a578063fa36f60c1461053d578063fabc1cbc1461055057600080fd5b80638da5cb5b146104b1578063b98d0908146104c2578063cefdc1d4146104cf578063df5cf723146104f057600080fd5b8063715018a6116100de578063715018a6146104735780637afa1eed1461047b5780637e4fa7001461048e578063886f11951461049e57600080fd5b806368304835146103e45780636d14a9871461040b5780636e1699ae146104325780636efb46361461045257600080fd5b80633e6a9264116101875780635ac86ab7116101565780635ac86ab7146103625780635c155662146103955780635c975abb146103b55780635df45946146103bd57600080fd5b80633e6a926414610314578063416c7e5e146103275780634f739f741461033a578063595c6a671461035a57600080fd5b80631d2d5d24116101c35780631d2d5d2414610288578063245a7bfc146102b65780632c3b965f146102e15780633563b0d1146102f457600080fd5b806310d67a2f146101f5578063136439dd1461020a578063171f1d5b1461021d5780631ad431891461024c575b600080fd5b6102086102033660046141c0565b610563565b005b6102086102183660046141dd565b61061f565b61023061022b36600461435b565b61075e565b6040805192151583529015156020830152015b60405180910390f35b6102737f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610243565b6102a86102963660046143c9565b60ca6020526000908152604090205481565b604051908152602001610243565b60cc546102c9906001600160a01b031681565b6040516001600160a01b039091168152602001610243565b6102a86102ef36600461442e565b6108e8565b6103076103023660046144b0565b610907565b604051610243919061460b565b610208610322366004614930565b610d9d565b610208610335366004614a0b565b610fd9565b61034d610348366004614a28565b61114e565b6040516102439190614afd565b610208611874565b610385610370366004614bc7565b606654600160ff9092169190911b9081161490565b6040519015158152602001610243565b6103a86103a3366004614be4565b61193b565b6040516102439190614c90565b6066546102a8565b6102c97f000000000000000000000000000000000000000000000000000000000000000081565b6102c97f000000000000000000000000000000000000000000000000000000000000000081565b6102c97f000000000000000000000000000000000000000000000000000000000000000081565b6102a86104403660046141dd565b60cb6020526000908152604090205481565b610465610460366004614cd4565b611b03565b604051610243929190614d94565b610208612a1a565b60cd546102c9906001600160a01b031681565b60c9546102739063ffffffff1681565b6065546102c9906001600160a01b031681565b6033546001600160a01b03166102c9565b6097546103859060ff1681565b6104e26104dd366004614ddd565b612a2e565b604051610243929190614e1f565b6102c97f000000000000000000000000000000000000000000000000000000000000000081565b6102086105253660046141c0565b612bc0565b610208610538366004614e40565b612c36565b61020861054b366004614e9c565b612d87565b61020861055e3660046141dd565b612f0f565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190614ef7565b6001600160a01b0316336001600160a01b0316146106135760405162461bcd60e51b815260040161060a90614f14565b60405180910390fd5b61061c8161306b565b50565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190614f5e565b6106a75760405162461bcd60e51b815260040161060a90614f7b565b606654818116146107205760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161060a565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001878760000151886020015188600001516000600281106107a6576107a6614fc3565b60200201518951600160200201518a602001516000600281106107cb576107cb614fc3565b60200201518b602001516001600281106107e7576107e7614fc3565b602090810291909101518c518d8301516040516108449a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c6108679190614fd9565b90506108da6108806108798884613162565b86906131f9565b61088861328d565b6108d06108c1856108bb604080518082018252600080825260209182015281518083019092526001825260029082015290565b90613162565b6108ca8c61334d565b906131f9565b886201d4c06133dd565b909890975095505050505050565b60008060006108fa8888888888613601565b9998505050505050505050565b60606000846001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190614ef7565b90506000856001600160a01b0316639e9923c26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190614ef7565b90506000866001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a399190614ef7565b9050600086516001600160401b03811115610a5657610a566141f6565b604051908082528060200260200182016040528015610a8957816020015b6060815260200190600190039081610a745790505b50905060005b8751811015610d91576000888281518110610aac57610aac614fc3565b0160200151604051638902624560e01b815260f89190911c6004820181905263ffffffff8a16602483015291506000906001600160a01b03871690638902624590604401600060405180830381865afa158015610b0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b359190810190614ffb565b905080516001600160401b03811115610b5057610b506141f6565b604051908082528060200260200182016040528015610b9b57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610b6e5790505b50848481518110610bae57610bae614fc3565b602002602001018190525060005b8151811015610d7b576040518060600160405280876001600160a01b03166347b314e8858581518110610bf157610bf1614fc3565b60200260200101516040518263ffffffff1660e01b8152600401610c1791815260200190565b602060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190614ef7565b6001600160a01b03168152602001838381518110610c7857610c78614fc3565b60200260200101518152602001896001600160a01b031663fa28c627858581518110610ca657610ca6614fc3565b60209081029190910101516040516001600160e01b031960e084901b168152600481019190915260ff8816602482015263ffffffff8f166044820152606401602060405180830381865afa158015610d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d26919061508b565b6001600160601b0316815250858581518110610d4457610d44614fc3565b60200260200101518281518110610d5d57610d5d614fc3565b60200260200101819052508080610d73906150ca565b915050610bbc565b5050508080610d89906150ca565b915050610a8f565b50979650505050505050565b60cc546001600160a01b03163314610df75760405162461bcd60e51b815260206004820152601d60248201527f41676772656761746f72206d757374206265207468652063616c6c6572000000604482015260640161060a565b6000610e05878787876136e4565b9050600083604051602001610e1d9135815260200190565b60408051601f1981840301815291905280516020909101209050600080610e6483610e4b60608d018d6150e5565b8d6020016020810190610e5e91906143c9565b89611b03565b9150915060005b610e7860608c018c6150e5565b9050811015610f8057610e9160a08c0160808d016143c9565b60ff1683602001518281518110610eaa57610eaa614fc3565b6020026020010151610ebc919061512b565b6001600160601b0316606484600001518381518110610edd57610edd614fc3565b60200260200101516001600160601b0316610ef8919061515a565b1015610f6e576040805162461bcd60e51b81526020600482015260248101919091527f5369676e61746f7269657320646f206e6f74206f776e206174206c656173742060448201527f7468726573686f6c642070657263656e74616765206f6620612071756f72756d606482015260840161060a565b80610f78816150ca565b915050610e6b565b50600084815260cb60209081526040918290208835908190558251878152918201527f334f2eec82b2de26c7d6111736c88a27183cd06471c7d4dbd4f84b4964175a10910160405180910390a150505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611037573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105b9190614ef7565b6001600160a01b0316336001600160a01b0316146111075760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a40161060a565b6097805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b6111796040518060800160405280606081526020016060815260200160608152602001606081525090565b6000876001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190614ef7565b905061120a6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040516361c8a12f60e11b81526001600160a01b038a169063c391425e9061123a908b9089908990600401615179565b600060405180830381865afa158015611257573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261127f91908101906151c3565b81526040516340e03a8160e11b81526001600160a01b038316906381c07502906112b1908b908b908b9060040161527a565b600060405180830381865afa1580156112ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112f691908101906151c3565b6040820152856001600160401b03811115611313576113136141f6565b60405190808252806020026020018201604052801561134657816020015b60608152602001906001900390816113315790505b50606082015260005b60ff8116871115611785576000856001600160401b03811115611374576113746141f6565b60405190808252806020026020018201604052801561139d578160200160208202803683370190505b5083606001518360ff16815181106113b7576113b7614fc3565b602002602001018190525060005b868110156116855760008c6001600160a01b03166304ec63518a8a858181106113f0576113f0614fc3565b905060200201358e8860000151868151811061140e5761140e614fc3565b60200260200101516040518463ffffffff1660e01b815260040161144b9392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148c91906152a3565b90506001600160c01b0381166115305760405162461bcd60e51b815260206004820152605c60248201527f4f70657261746f7253746174655265747269657665722e676574436865636b5360448201527f69676e617475726573496e64696365733a206f70657261746f72206d7573742060648201527f6265207265676973746572656420617420626c6f636b6e756d62657200000000608482015260a40161060a565b8a8a8560ff1681811061154557611545614fc3565b6001600160c01b03841692013560f81c9190911c60019081161415905061167257856001600160a01b031663dd9846b98a8a8581811061158757611587614fc3565b905060200201358d8d8860ff168181106115a3576115a3614fc3565b6040516001600160e01b031960e087901b1681526004810194909452919091013560f81c60248301525063ffffffff8f166044820152606401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d91906152cc565b85606001518560ff168151811061163657611636614fc3565b6020026020010151848151811061164f5761164f614fc3565b63ffffffff909216602092830291909101909101528261166e816150ca565b9350505b508061167d816150ca565b9150506113c5565b506000816001600160401b038111156116a0576116a06141f6565b6040519080825280602002602001820160405280156116c9578160200160208202803683370190505b50905060005b8281101561174a5784606001518460ff16815181106116f0576116f0614fc3565b6020026020010151818151811061170957611709614fc3565b602002602001015182828151811061172357611723614fc3565b63ffffffff9092166020928302919091019091015280611742816150ca565b9150506116cf565b508084606001518460ff168151811061176557611765614fc3565b60200260200101819052505050808061177d906152e9565b91505061134f565b506000896001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ea9190614ef7565b60405163354952a360e21b81529091506001600160a01b0382169063d5254a8c9061181d908b908b908e90600401615309565b600060405180830381865afa15801561183a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261186291908101906151c3565b60208301525098975050505050505050565b60655460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa1580156118bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e09190614f5e565b6118fc5760405162461bcd60e51b815260040161060a90614f7b565b600019606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60606000846001600160a01b031663c391425e84866040518363ffffffff1660e01b815260040161196d929190615333565b600060405180830381865afa15801561198a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119b291908101906151c3565b9050600084516001600160401b038111156119cf576119cf6141f6565b6040519080825280602002602001820160405280156119f8578160200160208202803683370190505b50905060005b8551811015611af957866001600160a01b03166304ec6351878381518110611a2857611a28614fc3565b602002602001015187868581518110611a4357611a43614fc3565b60200260200101516040518463ffffffff1660e01b8152600401611a809392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac191906152a3565b6001600160c01b0316828281518110611adc57611adc614fc3565b602090810291909101015280611af1816150ca565b9150506119fe565b5095945050505050565b6040805180820190915260608082526020820152600084611b7a5760405162461bcd60e51b815260206004820152603760248201526000805160206156ab83398151915260448201527f7265733a20656d7074792071756f72756d20696e707574000000000000000000606482015260840161060a565b60408301515185148015611b92575060a08301515185145b8015611ba2575060c08301515185145b8015611bb2575060e08301515185145b611c1c5760405162461bcd60e51b815260206004820152604160248201526000805160206156ab83398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a40161060a565b82515160208401515114611c945760405162461bcd60e51b8152602060048201526044602482018190526000805160206156ab833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a40161060a565b4363ffffffff168463ffffffff1610611d035760405162461bcd60e51b815260206004820152603c60248201526000805160206156ab83398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b00000000606482015260840161060a565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b03811115611d4457611d446141f6565b604051908082528060200260200182016040528015611d6d578160200160208202803683370190505b506020820152866001600160401b03811115611d8b57611d8b6141f6565b604051908082528060200260200182016040528015611db4578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b03811115611de857611de86141f6565b604051908082528060200260200182016040528015611e11578160200160208202803683370190505b5081526020860151516001600160401b03811115611e3157611e316141f6565b604051908082528060200260200182016040528015611e5a578160200160208202803683370190505b5081602001819052506000611f2c8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa158015611f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f27919061537a565b6138e8565b905060005b8760200151518110156121c757611f7688602001518281518110611f5757611f57614fc3565b6020026020010151805160009081526020918201519091526040902090565b83602001518281518110611f8c57611f8c614fc3565b6020908102919091010152801561204c576020830151611fad600183615397565b81518110611fbd57611fbd614fc3565b602002602001015160001c83602001518281518110611fde57611fde614fc3565b602002602001015160001c1161204c576040805162461bcd60e51b81526020600482015260248101919091526000805160206156ab83398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f72746564606482015260840161060a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec63518460200151838151811061209157612091614fc3565b60200260200101518b8b6000015185815181106120b0576120b0614fc3565b60200260200101516040518463ffffffff1660e01b81526004016120ed9392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa15801561210a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212e91906152a3565b6001600160c01b03168360000151828151811061214d5761214d614fc3565b6020026020010181815250506121b3610879612187848660000151858151811061217957612179614fc3565b60200260200101511661397b565b8a60200151848151811061219d5761219d614fc3565b60200260200101516139a690919063ffffffff16565b9450806121bf816150ca565b915050611f31565b50506121d283613a8a565b60975490935060ff166000816121e957600061226b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015612247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226b91906153ae565b905060005b8a8110156128e95782156123cb578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f868181106122c7576122c7614fc3565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015612307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232b91906153ae565b61233591906153c7565b116123cb5760405162461bcd60e51b815260206004820152606660248201526000805160206156ab83398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c40161060a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d8481811061240c5761240c614fc3565b9050013560f81c60f81b60f81c8c8c60a00151858151811061243057612430614fc3565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa15801561248c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124b091906153df565b6001600160401b0319166124d38a604001518381518110611f5757611f57614fc3565b67ffffffffffffffff19161461256f5760405162461bcd60e51b815260206004820152606160248201526000805160206156ab83398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c40161060a565b61259f8960400151828151811061258857612588614fc3565b6020026020010151876131f990919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d848181106125e2576125e2614fc3565b9050013560f81c60f81b60f81c8c8c60c00151858151811061260657612606614fc3565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015612662573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612686919061508b565b8560200151828151811061269c5761269c614fc3565b6001600160601b039092166020928302919091018201528501518051829081106126c8576126c8614fc3565b6020026020010151856000015182815181106126e6576126e6614fc3565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a60200151518110156128d45761275e8660000151828151811061273057612730614fc3565b60200260200101518f8f8681811061274a5761274a614fc3565b600192013560f81c9290921c811614919050565b156128c2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f868181106127a4576127a4614fc3565b9050013560f81c60f81b60f81c8e896020015185815181106127c8576127c8614fc3565b60200260200101518f60e0015188815181106127e6576127e6614fc3565b602002602001015187815181106127ff576127ff614fc3565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa158015612863573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612887919061508b565b875180518590811061289b5761289b614fc3565b602002602001018181516128af919061540a565b6001600160601b03169052506001909101905b806128cc816150ca565b91505061270a565b505080806128e1906150ca565b915050612270565b5050506000806129038c868a606001518b6080015161075e565b91509150816129745760405162461bcd60e51b815260206004820152604360248201526000805160206156ab83398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a40161060a565b806129d55760405162461bcd60e51b815260206004820152603960248201526000805160206156ab83398151915260448201527f7265733a207369676e617475726520697320696e76616c696400000000000000606482015260840161060a565b505060008782602001516040516020016129f0929190615432565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b612a22613b25565b612a2c6000613b7f565b565b6040805160018082528183019092526000916060918391602080830190803683370190505090508481600081518110612a6957612a69614fc3565b60209081029190910101526040516361c8a12f60e11b81526000906001600160a01b0388169063c391425e90612aa59088908690600401615333565b600060405180830381865afa158015612ac2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612aea91908101906151c3565b600081518110612afc57612afc614fc3565b60209081029190910101516040516304ec635160e01b81526004810188905263ffffffff87811660248301529091166044820181905291506000906001600160a01b038916906304ec635190606401602060405180830381865afa158015612b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8c91906152a3565b6001600160c01b031690506000612ba282613bd1565b905081612bb08a838a610907565b9550955050505050935093915050565b612bc8613b25565b6001600160a01b038116612c2d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060a565b61061c81613b7f565b600054610100900460ff1615808015612c565750600054600160ff909116105b80612c705750303b158015612c70575060005460ff166001145b612cd35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161060a565b6000805460ff191660011790558015612cf6576000805461ff0019166101001790555b612d01856000613c9d565b612d0a84613b7f565b60cc80546001600160a01b038086166001600160a01b03199283161790925560cd8054928516929091169190911790558015612d80576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b60cd546001600160a01b03163314612deb5760405162461bcd60e51b815260206004820152602160248201527f5461736b2067656e657261746f72206d757374206265207468652063616c6c656044820152603960f91b606482015260840161060a565b6040805160a08101825260608082015260c95463ffffffff908116825243811660208084019190915282840188905290861660808301528251601f85018290048202810182019093528383529091908490849081908401838280828437600092018290525060608601949094525050604051612e6c915083906020016154c7565b60408051601f19818403018152918152815160209283012060c9805463ffffffff908116600090815260ca9095529284208290558054919450911691612eb183615523565b91906101000a81548163ffffffff021916908363ffffffff160217905550507f9e93280875f7d0d786d58b17dfd709c5bd47d7802bf3ecc67d4ce2b9a8a7bd9582604051612eff91906154c7565b60405180910390a1505050505050565b606560009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f869190614ef7565b6001600160a01b0316336001600160a01b031614612fb65760405162461bcd60e51b815260040161060a90614f14565b6066541981196066541916146130345760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161060a565b606681905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610753565b6001600160a01b0381166130f95760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a40161060a565b606554604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a1606580546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082019091526000808252602082015261317e6140d1565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa90508080156131b1576131b3565bfe5b50806131f15760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b604482015260640161060a565b505092915050565b60408051808201909152600080825260208201526132156140ef565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa90508080156131b15750806131f15760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b604482015260640161060a565b61329561410d565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b60408051808201909152600080825260208201526000808061337d60008051602061568b83398151915286614fd9565b90505b61338981613d87565b909350915060008051602061568b8339815191528283098314156133c3576040805180820190915290815260208101919091529392505050565b60008051602061568b833981519152600182089050613380565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061340f614132565b60005b60028110156135d457600061342882600661515a565b905084826002811061343c5761343c614fc3565b6020020151518361344e8360006153c7565b600c811061345e5761345e614fc3565b602002015284826002811061347557613475614fc3565b6020020151602001518382600161348c91906153c7565b600c811061349c5761349c614fc3565b60200201528382600281106134b3576134b3614fc3565b60200201515151836134c68360026153c7565b600c81106134d6576134d6614fc3565b60200201528382600281106134ed576134ed614fc3565b60200201515160016020020151836135068360036153c7565b600c811061351657613516614fc3565b602002015283826002811061352d5761352d614fc3565b60200201516020015160006002811061354857613548614fc3565b6020020151836135598360046153c7565b600c811061356957613569614fc3565b602002015283826002811061358057613580614fc3565b60200201516020015160016002811061359b5761359b614fc3565b6020020151836135ac8360056153c7565b600c81106135bc576135bc614fc3565b602002015250806135cc816150ca565b915050613412565b506135dd614151565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b604080516060808201835260008083526020830182905292820152819063ffffffff88168152604080516020601f890181900481028201810190925287815290889088908190840183828082843760009201919091525050505060208083019190915260408051601f8701839004830281018301909152858152908690869081908401838280828437600092018290525060408087019590955293516136af93508592506020019050615547565b60408051808303601f190181529181528151602092830120600081815260cb909352912054909a909950975050505050505050565b600080856040516020016136f89190615590565b6040516020818303038152906040528051906020012090508060ca600088600001602081019061372891906143c9565b63ffffffff1663ffffffff168152602001908152602001600020541461379b5760405162461bcd60e51b815260206004820152602260248201527f5461736b20626174636820686173206e6f74206265656e207265676973746572604482015261195960f21b606482015260840161060a565b6000806137ca6137ae60208a018a6143c9565b6137b889806150e5565b6137c560208c018c6150e5565b613601565b915091508060001461381e5760405162461bcd60e51b815260206004820152601f60248201527f5461736b20726573706f6e736520616c726561647920726573706f6e64656400604482015260640161060a565b600061382a88806150e5565b61383760208b018b6150e5565b60405160200161384a949392919061564b565b60408051601f198184030181528282528051602091820120908301520160405160208183030381529060405280519060200120905061388f87878b6040013584613e09565b6138db5760405162461bcd60e51b815260206004820152601d60248201527f5461736b20646f6573206e6f742062656c6f6e6720746f206261746368000000604482015260640161060a565b5090979650505050505050565b6000806138f484613e21565b9050808360ff166001901b116139725760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c756500606482015260840161060a565b90505b92915050565b6000805b821561397557613990600184615397565b909216918061399e81615672565b91505061397f565b60408051808201909152600080825260208201526102008261ffff1610613a025760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b604482015260640161060a565b8161ffff1660011415613a16575081613975565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff1610613a7f57600161ffff871660ff83161c81161415613a6257613a5f84846131f9565b93505b613a6c83846131f9565b92506201fffe600192831b169101613a32565b509195945050505050565b60408051808201909152600080825260208201528151158015613aaf57506020820151155b15613acd575050604080518082019091526000808252602082015290565b60405180604001604052808360000151815260200160008051602061568b8339815191528460200151613b009190614fd9565b613b189060008051602061568b833981519152615397565b905292915050565b919050565b6033546001600160a01b03163314612a2c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060a565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600080613bdf8461397b565b61ffff166001600160401b03811115613bfa57613bfa6141f6565b6040519080825280601f01601f191660200182016040528015613c24576020820181803683370190505b5090506000805b825182108015613c3c575061010081105b15613c93576001811b935085841615613c83578060f81b838381518110613c6557613c65614fc3565b60200101906001600160f81b031916908160001a9053508160010191505b613c8c816150ca565b9050613c2b565b5090949350505050565b6065546001600160a01b0316158015613cbe57506001600160a01b03821615155b613d405760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161060a565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2613d838261306b565b5050565b6000808060008051602061568b833981519152600360008051602061568b8339815191528660008051602061568b833981519152888909090890506000613dfd827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f5260008051602061568b833981519152613fae565b91959194509092505050565b600082613e17868685614056565b1495945050505050565b600061010082511115613eaa5760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a40161060a565b8151613eb857506000919050565b60008083600081518110613ece57613ece614fc3565b0160200151600160f89190911c81901b92505b8451811015613fa557848181518110613efc57613efc614fc3565b0160200151600160f89190911c1b9150828211613f915760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a40161060a565b91811791613f9e816150ca565b9050613ee1565b50909392505050565b600080613fb9614151565b613fc161416f565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa92508280156131b157508261404b5760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c757265000000000000604482015260640161060a565b505195945050505050565b600081815b84811015614099576140858287878481811061407957614079614fc3565b905060200201356140a2565b915080614091816150ca565b91505061405b565b50949350505050565b60008183106140be576000828152602084905260409020613972565b6000838152602083905260409020613972565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528061412061418d565b815260200161412d61418d565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461061c57600080fd5b6000602082840312156141d257600080fd5b8135613972816141ab565b6000602082840312156141ef57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561422e5761422e6141f6565b60405290565b60405161010081016001600160401b038111828210171561422e5761422e6141f6565b604051601f8201601f191681016001600160401b038111828210171561427f5761427f6141f6565b604052919050565b60006040828403121561429957600080fd5b6142a161420c565b9050813581526020820135602082015292915050565b600082601f8301126142c857600080fd5b604051604081018181106001600160401b03821117156142ea576142ea6141f6565b806040525080604084018581111561430157600080fd5b845b81811015613a7f578035835260209283019201614303565b60006080828403121561432d57600080fd5b61433561420c565b905061434183836142b7565b815261435083604084016142b7565b602082015292915050565b600080600080610120858703121561437257600080fd5b843593506143838660208701614287565b9250614392866060870161431b565b91506143a18660e08701614287565b905092959194509250565b63ffffffff8116811461061c57600080fd5b8035613b20816143ac565b6000602082840312156143db57600080fd5b8135613972816143ac565b60008083601f8401126143f857600080fd5b5081356001600160401b0381111561440f57600080fd5b60208301915083602082850101111561442757600080fd5b9250929050565b60008060008060006060868803121561444657600080fd5b8535614451816143ac565b945060208601356001600160401b038082111561446d57600080fd5b61447989838a016143e6565b9096509450604088013591508082111561449257600080fd5b5061449f888289016143e6565b969995985093965092949392505050565b6000806000606084860312156144c557600080fd5b83356144d0816141ab565b92506020848101356001600160401b03808211156144ed57600080fd5b818701915087601f83011261450157600080fd5b813581811115614513576145136141f6565b614525601f8201601f19168501614257565b9150808252888482850101111561453b57600080fd5b808484018584013760008482840101525080945050505061455e604085016143be565b90509250925092565b600081518084526020808501808196508360051b810191508286016000805b868110156145fd578385038a52825180518087529087019087870190845b818110156145e857835180516001600160a01b031684528a8101518b8501526040908101516001600160601b031690840152928901926060909201916001016145a4565b50509a87019a95505091850191600101614586565b509298975050505050505050565b6020815260006139726020830184614567565b60006040828403121561463057600080fd5b50919050565b60008083601f84011261464857600080fd5b5081356001600160401b0381111561465f57600080fd5b6020830191508360208260051b850101111561442757600080fd5b60006020828403121561463057600080fd5b60006001600160401b038211156146a5576146a56141f6565b5060051b60200190565b600082601f8301126146c057600080fd5b813560206146d56146d08361468c565b614257565b82815260059290921b840181019181810190868411156146f457600080fd5b8286015b8481101561471857803561470b816143ac565b83529183019183016146f8565b509695505050505050565b600082601f83011261473457600080fd5b813560206147446146d08361468c565b82815260069290921b8401810191818101908684111561476357600080fd5b8286015b84811015614718576147798882614287565b835291830191604001614767565b600082601f83011261479857600080fd5b813560206147a86146d08361468c565b82815260059290921b840181019181810190868411156147c757600080fd5b8286015b848110156147185780356001600160401b038111156147ea5760008081fd5b6147f88986838b01016146af565b8452509183019183016147cb565b6000610180828403121561481957600080fd5b614821614234565b905081356001600160401b038082111561483a57600080fd5b614846858386016146af565b8352602084013591508082111561485c57600080fd5b61486885838601614723565b6020840152604084013591508082111561488157600080fd5b61488d85838601614723565b604084015261489f856060860161431b565b60608401526148b18560e08601614287565b60808401526101208401359150808211156148cb57600080fd5b6148d7858386016146af565b60a08401526101408401359150808211156148f157600080fd5b6148fd858386016146af565b60c084015261016084013591508082111561491757600080fd5b5061492484828501614787565b60e08301525092915050565b60008060008060008060a0878903121561494957600080fd5b86356001600160401b038082111561496057600080fd5b9088019060a0828b03121561497457600080fd5b9096506020880135908082111561498a57600080fd5b6149968a838b0161461e565b965060408901359150808211156149ac57600080fd5b6149b88a838b01614636565b90965094508491506149cd8a60608b0161467a565b935060808901359150808211156149e357600080fd5b506149f089828a01614806565b9150509295509295509295565b801515811461061c57600080fd5b600060208284031215614a1d57600080fd5b8135613972816149fd565b60008060008060008060808789031215614a4157600080fd5b8635614a4c816141ab565b95506020870135614a5c816143ac565b945060408701356001600160401b0380821115614a7857600080fd5b614a848a838b016143e6565b90965094506060890135915080821115614a9d57600080fd5b50614aaa89828a01614636565b979a9699509497509295939492505050565b600081518084526020808501945080840160005b83811015614af257815163ffffffff1687529582019590820190600101614ad0565b509495945050505050565b600060208083528351608082850152614b1960a0850182614abc565b905081850151601f1980868403016040870152614b368383614abc565b92506040870151915080868403016060870152614b538383614abc565b60608801518782038301608089015280518083529194508501925084840190600581901b8501860160005b82811015614baa5784878303018452614b98828751614abc565b95880195938801939150600101614b7e565b509998505050505050505050565b60ff8116811461061c57600080fd5b600060208284031215614bd957600080fd5b813561397281614bb8565b600080600060608486031215614bf957600080fd5b8335614c04816141ab565b92506020848101356001600160401b03811115614c2057600080fd5b8501601f81018713614c3157600080fd5b8035614c3f6146d08261468c565b81815260059190911b82018301908381019089831115614c5e57600080fd5b928401925b82841015614c7c57833582529284019290840190614c63565b809650505050505061455e604085016143be565b6020808252825182820181905260009190848201906040850190845b81811015614cc857835183529284019291840191600101614cac565b50909695505050505050565b600080600080600060808688031215614cec57600080fd5b8535945060208601356001600160401b0380821115614d0a57600080fd5b614d1689838a016143e6565b909650945060408801359150614d2b826143ac565b90925060608701359080821115614d4157600080fd5b50614d4e88828901614806565b9150509295509295909350565b600081518084526020808501945080840160005b83811015614af25781516001600160601b031687529582019590820190600101614d6f565b6040815260008351604080840152614daf6080840182614d5b565b90506020850151603f19848303016060850152614dcc8282614d5b565b925050508260208301529392505050565b600080600060608486031215614df257600080fd5b8335614dfd816141ab565b9250602084013591506040840135614e14816143ac565b809150509250925092565b828152604060208201526000614e386040830184614567565b949350505050565b60008060008060808587031215614e5657600080fd5b8435614e61816141ab565b93506020850135614e71816141ab565b92506040850135614e81816141ab565b91506060850135614e91816141ab565b939692955090935050565b60008060008060608587031215614eb257600080fd5b843593506020850135614ec4816143ac565b925060408501356001600160401b03811115614edf57600080fd5b614eeb878288016143e6565b95989497509550505050565b600060208284031215614f0957600080fd5b8151613972816141ab565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b600060208284031215614f7057600080fd5b8151613972816149fd565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082614ff657634e487b7160e01b600052601260045260246000fd5b500690565b6000602080838503121561500e57600080fd5b82516001600160401b0381111561502457600080fd5b8301601f8101851361503557600080fd5b80516150436146d08261468c565b81815260059190911b8201830190838101908783111561506257600080fd5b928401925b8284101561508057835182529284019290840190615067565b979650505050505050565b60006020828403121561509d57600080fd5b81516001600160601b038116811461397257600080fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156150de576150de6150b4565b5060010190565b6000808335601e198436030181126150fc57600080fd5b8301803591506001600160401b0382111561511657600080fd5b60200191503681900382131561442757600080fd5b60006001600160601b0380831681851681830481118215151615615151576151516150b4565b02949350505050565b6000816000190483118215151615615174576151746150b4565b500290565b63ffffffff84168152604060208201819052810182905260006001600160fb1b038311156151a657600080fd5b8260051b8085606085013760009201606001918252509392505050565b600060208083850312156151d657600080fd5b82516001600160401b038111156151ec57600080fd5b8301601f810185136151fd57600080fd5b805161520b6146d08261468c565b81815260059190911b8201830190838101908783111561522a57600080fd5b928401925b82841015615080578351615242816143ac565b8252928401929084019061522f565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b63ffffffff8416815260406020820152600061529a604083018486615251565b95945050505050565b6000602082840312156152b557600080fd5b81516001600160c01b038116811461397257600080fd5b6000602082840312156152de57600080fd5b8151613972816143ac565b600060ff821660ff811415615300576153006150b4565b60010192915050565b60408152600061531d604083018587615251565b905063ffffffff83166020830152949350505050565b60006040820163ffffffff851683526020604081850152818551808452606086019150828701935060005b818110156138db5784518352938301939183019160010161535e565b60006020828403121561538c57600080fd5b815161397281614bb8565b6000828210156153a9576153a96150b4565b500390565b6000602082840312156153c057600080fd5b5051919050565b600082198211156153da576153da6150b4565b500190565b6000602082840312156153f157600080fd5b815167ffffffffffffffff198116811461397257600080fd5b60006001600160601b038381169083168181101561542a5761542a6150b4565b039392505050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b8381101561546d57815185529382019390820190600101615451565b5092979650505050505050565b6000815180845260005b818110156154a057602081850181015186830182015201615484565b818111156154b2576000602083870101525b50601f01601f19169290920160200192915050565b60208152600063ffffffff80845116602084015280602085015116604084015260408401516060840152606084015160a0608085015261550a60c085018261547a565b90508160808601511660a0850152809250505092915050565b600063ffffffff8083168181141561553d5761553d6150b4565b6001019392505050565b6020815263ffffffff82511660208201526000602083015160606040840152615573608084018261547a565b90506040840151601f1984830301606085015261529a828261547a565b60208152600082356155a1816143ac565b63ffffffff8082166020850152602085013591506155be826143ac565b80821660408501525050604083013560608301526060830135601e198436030181126155e957600080fd5b830180356001600160401b0381111561560157600080fd5b80360385131561561057600080fd5b60a0608085015261562860c085018260208501615251565b915050615637608085016143be565b63ffffffff811660a0850152509392505050565b60408152600061565f604083018688615251565b8281036020840152615080818587615251565b600061ffff8083168181141561553d5761553d6150b456fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a264697066735822122031c90936aa30e0dd04d10b7ff337c1b74090b17024e63bcd4cb4adc9d13485d764736f6c634300080c0033",
}

// ContractLambadaCoprocessorTaskManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractLambadaCoprocessorTaskManagerMetaData.ABI instead.
var ContractLambadaCoprocessorTaskManagerABI = ContractLambadaCoprocessorTaskManagerMetaData.ABI

// ContractLambadaCoprocessorTaskManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractLambadaCoprocessorTaskManagerMetaData.Bin instead.
var ContractLambadaCoprocessorTaskManagerBin = ContractLambadaCoprocessorTaskManagerMetaData.Bin

// DeployContractLambadaCoprocessorTaskManager deploys a new Ethereum contract, binding an instance of ContractLambadaCoprocessorTaskManager to it.
func DeployContractLambadaCoprocessorTaskManager(auth *bind.TransactOpts, backend bind.ContractBackend, _registryCoordinator common.Address, _taskResponseWindowBlock uint32) (common.Address, *types.Transaction, *ContractLambadaCoprocessorTaskManager, error) {
	parsed, err := ContractLambadaCoprocessorTaskManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractLambadaCoprocessorTaskManagerBin), backend, _registryCoordinator, _taskResponseWindowBlock)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractLambadaCoprocessorTaskManager{ContractLambadaCoprocessorTaskManagerCaller: ContractLambadaCoprocessorTaskManagerCaller{contract: contract}, ContractLambadaCoprocessorTaskManagerTransactor: ContractLambadaCoprocessorTaskManagerTransactor{contract: contract}, ContractLambadaCoprocessorTaskManagerFilterer: ContractLambadaCoprocessorTaskManagerFilterer{contract: contract}}, nil
}

// ContractLambadaCoprocessorTaskManager is an auto generated Go binding around an Ethereum contract.
type ContractLambadaCoprocessorTaskManager struct {
	ContractLambadaCoprocessorTaskManagerCaller     // Read-only binding to the contract
	ContractLambadaCoprocessorTaskManagerTransactor // Write-only binding to the contract
	ContractLambadaCoprocessorTaskManagerFilterer   // Log filterer for contract events
}

// ContractLambadaCoprocessorTaskManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractLambadaCoprocessorTaskManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractLambadaCoprocessorTaskManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractLambadaCoprocessorTaskManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractLambadaCoprocessorTaskManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractLambadaCoprocessorTaskManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractLambadaCoprocessorTaskManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractLambadaCoprocessorTaskManagerSession struct {
	Contract     *ContractLambadaCoprocessorTaskManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                          // Call options to use throughout this session
	TransactOpts bind.TransactOpts                      // Transaction auth options to use throughout this session
}

// ContractLambadaCoprocessorTaskManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractLambadaCoprocessorTaskManagerCallerSession struct {
	Contract *ContractLambadaCoprocessorTaskManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                                // Call options to use throughout this session
}

// ContractLambadaCoprocessorTaskManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractLambadaCoprocessorTaskManagerTransactorSession struct {
	Contract     *ContractLambadaCoprocessorTaskManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                                // Transaction auth options to use throughout this session
}

// ContractLambadaCoprocessorTaskManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractLambadaCoprocessorTaskManagerRaw struct {
	Contract *ContractLambadaCoprocessorTaskManager // Generic contract binding to access the raw methods on
}

// ContractLambadaCoprocessorTaskManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractLambadaCoprocessorTaskManagerCallerRaw struct {
	Contract *ContractLambadaCoprocessorTaskManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractLambadaCoprocessorTaskManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractLambadaCoprocessorTaskManagerTransactorRaw struct {
	Contract *ContractLambadaCoprocessorTaskManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractLambadaCoprocessorTaskManager creates a new instance of ContractLambadaCoprocessorTaskManager, bound to a specific deployed contract.
func NewContractLambadaCoprocessorTaskManager(address common.Address, backend bind.ContractBackend) (*ContractLambadaCoprocessorTaskManager, error) {
	contract, err := bindContractLambadaCoprocessorTaskManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManager{ContractLambadaCoprocessorTaskManagerCaller: ContractLambadaCoprocessorTaskManagerCaller{contract: contract}, ContractLambadaCoprocessorTaskManagerTransactor: ContractLambadaCoprocessorTaskManagerTransactor{contract: contract}, ContractLambadaCoprocessorTaskManagerFilterer: ContractLambadaCoprocessorTaskManagerFilterer{contract: contract}}, nil
}

// NewContractLambadaCoprocessorTaskManagerCaller creates a new read-only instance of ContractLambadaCoprocessorTaskManager, bound to a specific deployed contract.
func NewContractLambadaCoprocessorTaskManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractLambadaCoprocessorTaskManagerCaller, error) {
	contract, err := bindContractLambadaCoprocessorTaskManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerCaller{contract: contract}, nil
}

// NewContractLambadaCoprocessorTaskManagerTransactor creates a new write-only instance of ContractLambadaCoprocessorTaskManager, bound to a specific deployed contract.
func NewContractLambadaCoprocessorTaskManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractLambadaCoprocessorTaskManagerTransactor, error) {
	contract, err := bindContractLambadaCoprocessorTaskManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerTransactor{contract: contract}, nil
}

// NewContractLambadaCoprocessorTaskManagerFilterer creates a new log filterer instance of ContractLambadaCoprocessorTaskManager, bound to a specific deployed contract.
func NewContractLambadaCoprocessorTaskManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractLambadaCoprocessorTaskManagerFilterer, error) {
	contract, err := bindContractLambadaCoprocessorTaskManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerFilterer{contract: contract}, nil
}

// bindContractLambadaCoprocessorTaskManager binds a generic wrapper to an already deployed contract.
func bindContractLambadaCoprocessorTaskManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractLambadaCoprocessorTaskManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractLambadaCoprocessorTaskManager.Contract.ContractLambadaCoprocessorTaskManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.ContractLambadaCoprocessorTaskManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.ContractLambadaCoprocessorTaskManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractLambadaCoprocessorTaskManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.contract.Transact(opts, method, params...)
}

// TASKRESPONSEWINDOWBLOCK is a free data retrieval call binding the contract method 0x1ad43189.
//
// Solidity: function TASK_RESPONSE_WINDOW_BLOCK() view returns(uint32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) TASKRESPONSEWINDOWBLOCK(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "TASK_RESPONSE_WINDOW_BLOCK")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TASKRESPONSEWINDOWBLOCK is a free data retrieval call binding the contract method 0x1ad43189.
//
// Solidity: function TASK_RESPONSE_WINDOW_BLOCK() view returns(uint32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) TASKRESPONSEWINDOWBLOCK() (uint32, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.TASKRESPONSEWINDOWBLOCK(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// TASKRESPONSEWINDOWBLOCK is a free data retrieval call binding the contract method 0x1ad43189.
//
// Solidity: function TASK_RESPONSE_WINDOW_BLOCK() view returns(uint32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) TASKRESPONSEWINDOWBLOCK() (uint32, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.TASKRESPONSEWINDOWBLOCK(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Aggregator is a free data retrieval call binding the contract method 0x245a7bfc.
//
// Solidity: function aggregator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) Aggregator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "aggregator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Aggregator is a free data retrieval call binding the contract method 0x245a7bfc.
//
// Solidity: function aggregator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Aggregator() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Aggregator(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Aggregator is a free data retrieval call binding the contract method 0x245a7bfc.
//
// Solidity: function aggregator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) Aggregator() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Aggregator(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// AllBatchHashes is a free data retrieval call binding the contract method 0x1d2d5d24.
//
// Solidity: function allBatchHashes(uint32 ) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) AllBatchHashes(opts *bind.CallOpts, arg0 uint32) ([32]byte, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "allBatchHashes", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// AllBatchHashes is a free data retrieval call binding the contract method 0x1d2d5d24.
//
// Solidity: function allBatchHashes(uint32 ) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) AllBatchHashes(arg0 uint32) ([32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.AllBatchHashes(&_ContractLambadaCoprocessorTaskManager.CallOpts, arg0)
}

// AllBatchHashes is a free data retrieval call binding the contract method 0x1d2d5d24.
//
// Solidity: function allBatchHashes(uint32 ) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) AllBatchHashes(arg0 uint32) ([32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.AllBatchHashes(&_ContractLambadaCoprocessorTaskManager.CallOpts, arg0)
}

// AllTaskOutputs is a free data retrieval call binding the contract method 0x6e1699ae.
//
// Solidity: function allTaskOutputs(bytes32 ) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) AllTaskOutputs(opts *bind.CallOpts, arg0 [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "allTaskOutputs", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// AllTaskOutputs is a free data retrieval call binding the contract method 0x6e1699ae.
//
// Solidity: function allTaskOutputs(bytes32 ) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) AllTaskOutputs(arg0 [32]byte) ([32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.AllTaskOutputs(&_ContractLambadaCoprocessorTaskManager.CallOpts, arg0)
}

// AllTaskOutputs is a free data retrieval call binding the contract method 0x6e1699ae.
//
// Solidity: function allTaskOutputs(bytes32 ) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) AllTaskOutputs(arg0 [32]byte) ([32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.AllTaskOutputs(&_ContractLambadaCoprocessorTaskManager.CallOpts, arg0)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) BlsApkRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "blsApkRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.BlsApkRegistry(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.BlsApkRegistry(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, params)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.CheckSignatures(&_ContractLambadaCoprocessorTaskManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.CheckSignatures(&_ContractLambadaCoprocessorTaskManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Delegation() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Delegation(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) Delegation() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Delegation(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Generator is a free data retrieval call binding the contract method 0x7afa1eed.
//
// Solidity: function generator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) Generator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "generator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Generator is a free data retrieval call binding the contract method 0x7afa1eed.
//
// Solidity: function generator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Generator() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Generator(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Generator is a free data retrieval call binding the contract method 0x7afa1eed.
//
// Solidity: function generator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) Generator() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Generator(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// GetCheckSignaturesIndices is a free data retrieval call binding the contract method 0x4f739f74.
//
// Solidity: function getCheckSignaturesIndices(address registryCoordinator, uint32 referenceBlockNumber, bytes quorumNumbers, bytes32[] nonSignerOperatorIds) view returns((uint32[],uint32[],uint32[],uint32[][]))
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) GetCheckSignaturesIndices(opts *bind.CallOpts, registryCoordinator common.Address, referenceBlockNumber uint32, quorumNumbers []byte, nonSignerOperatorIds [][32]byte) (OperatorStateRetrieverCheckSignaturesIndices, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "getCheckSignaturesIndices", registryCoordinator, referenceBlockNumber, quorumNumbers, nonSignerOperatorIds)

	if err != nil {
		return *new(OperatorStateRetrieverCheckSignaturesIndices), err
	}

	out0 := *abi.ConvertType(out[0], new(OperatorStateRetrieverCheckSignaturesIndices)).(*OperatorStateRetrieverCheckSignaturesIndices)

	return out0, err

}

// GetCheckSignaturesIndices is a free data retrieval call binding the contract method 0x4f739f74.
//
// Solidity: function getCheckSignaturesIndices(address registryCoordinator, uint32 referenceBlockNumber, bytes quorumNumbers, bytes32[] nonSignerOperatorIds) view returns((uint32[],uint32[],uint32[],uint32[][]))
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) GetCheckSignaturesIndices(registryCoordinator common.Address, referenceBlockNumber uint32, quorumNumbers []byte, nonSignerOperatorIds [][32]byte) (OperatorStateRetrieverCheckSignaturesIndices, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetCheckSignaturesIndices(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, referenceBlockNumber, quorumNumbers, nonSignerOperatorIds)
}

// GetCheckSignaturesIndices is a free data retrieval call binding the contract method 0x4f739f74.
//
// Solidity: function getCheckSignaturesIndices(address registryCoordinator, uint32 referenceBlockNumber, bytes quorumNumbers, bytes32[] nonSignerOperatorIds) view returns((uint32[],uint32[],uint32[],uint32[][]))
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) GetCheckSignaturesIndices(registryCoordinator common.Address, referenceBlockNumber uint32, quorumNumbers []byte, nonSignerOperatorIds [][32]byte) (OperatorStateRetrieverCheckSignaturesIndices, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetCheckSignaturesIndices(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, referenceBlockNumber, quorumNumbers, nonSignerOperatorIds)
}

// GetOperatorState is a free data retrieval call binding the contract method 0x3563b0d1.
//
// Solidity: function getOperatorState(address registryCoordinator, bytes quorumNumbers, uint32 blockNumber) view returns((address,bytes32,uint96)[][])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) GetOperatorState(opts *bind.CallOpts, registryCoordinator common.Address, quorumNumbers []byte, blockNumber uint32) ([][]OperatorStateRetrieverOperator, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "getOperatorState", registryCoordinator, quorumNumbers, blockNumber)

	if err != nil {
		return *new([][]OperatorStateRetrieverOperator), err
	}

	out0 := *abi.ConvertType(out[0], new([][]OperatorStateRetrieverOperator)).(*[][]OperatorStateRetrieverOperator)

	return out0, err

}

// GetOperatorState is a free data retrieval call binding the contract method 0x3563b0d1.
//
// Solidity: function getOperatorState(address registryCoordinator, bytes quorumNumbers, uint32 blockNumber) view returns((address,bytes32,uint96)[][])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) GetOperatorState(registryCoordinator common.Address, quorumNumbers []byte, blockNumber uint32) ([][]OperatorStateRetrieverOperator, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetOperatorState(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, quorumNumbers, blockNumber)
}

// GetOperatorState is a free data retrieval call binding the contract method 0x3563b0d1.
//
// Solidity: function getOperatorState(address registryCoordinator, bytes quorumNumbers, uint32 blockNumber) view returns((address,bytes32,uint96)[][])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) GetOperatorState(registryCoordinator common.Address, quorumNumbers []byte, blockNumber uint32) ([][]OperatorStateRetrieverOperator, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetOperatorState(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, quorumNumbers, blockNumber)
}

// GetOperatorState0 is a free data retrieval call binding the contract method 0xcefdc1d4.
//
// Solidity: function getOperatorState(address registryCoordinator, bytes32 operatorId, uint32 blockNumber) view returns(uint256, (address,bytes32,uint96)[][])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) GetOperatorState0(opts *bind.CallOpts, registryCoordinator common.Address, operatorId [32]byte, blockNumber uint32) (*big.Int, [][]OperatorStateRetrieverOperator, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "getOperatorState0", registryCoordinator, operatorId, blockNumber)

	if err != nil {
		return *new(*big.Int), *new([][]OperatorStateRetrieverOperator), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new([][]OperatorStateRetrieverOperator)).(*[][]OperatorStateRetrieverOperator)

	return out0, out1, err

}

// GetOperatorState0 is a free data retrieval call binding the contract method 0xcefdc1d4.
//
// Solidity: function getOperatorState(address registryCoordinator, bytes32 operatorId, uint32 blockNumber) view returns(uint256, (address,bytes32,uint96)[][])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) GetOperatorState0(registryCoordinator common.Address, operatorId [32]byte, blockNumber uint32) (*big.Int, [][]OperatorStateRetrieverOperator, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetOperatorState0(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, operatorId, blockNumber)
}

// GetOperatorState0 is a free data retrieval call binding the contract method 0xcefdc1d4.
//
// Solidity: function getOperatorState(address registryCoordinator, bytes32 operatorId, uint32 blockNumber) view returns(uint256, (address,bytes32,uint96)[][])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) GetOperatorState0(registryCoordinator common.Address, operatorId [32]byte, blockNumber uint32) (*big.Int, [][]OperatorStateRetrieverOperator, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetOperatorState0(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, operatorId, blockNumber)
}

// GetQuorumBitmapsAtBlockNumber is a free data retrieval call binding the contract method 0x5c155662.
//
// Solidity: function getQuorumBitmapsAtBlockNumber(address registryCoordinator, bytes32[] operatorIds, uint32 blockNumber) view returns(uint256[])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) GetQuorumBitmapsAtBlockNumber(opts *bind.CallOpts, registryCoordinator common.Address, operatorIds [][32]byte, blockNumber uint32) ([]*big.Int, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "getQuorumBitmapsAtBlockNumber", registryCoordinator, operatorIds, blockNumber)

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// GetQuorumBitmapsAtBlockNumber is a free data retrieval call binding the contract method 0x5c155662.
//
// Solidity: function getQuorumBitmapsAtBlockNumber(address registryCoordinator, bytes32[] operatorIds, uint32 blockNumber) view returns(uint256[])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) GetQuorumBitmapsAtBlockNumber(registryCoordinator common.Address, operatorIds [][32]byte, blockNumber uint32) ([]*big.Int, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetQuorumBitmapsAtBlockNumber(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, operatorIds, blockNumber)
}

// GetQuorumBitmapsAtBlockNumber is a free data retrieval call binding the contract method 0x5c155662.
//
// Solidity: function getQuorumBitmapsAtBlockNumber(address registryCoordinator, bytes32[] operatorIds, uint32 blockNumber) view returns(uint256[])
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) GetQuorumBitmapsAtBlockNumber(registryCoordinator common.Address, operatorIds [][32]byte, blockNumber uint32) ([]*big.Int, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetQuorumBitmapsAtBlockNumber(&_ContractLambadaCoprocessorTaskManager.CallOpts, registryCoordinator, operatorIds, blockNumber)
}

// GetTaskOutputHash is a free data retrieval call binding the contract method 0x2c3b965f.
//
// Solidity: function getTaskOutputHash(uint32 batchIndex, bytes programId, bytes taskInputHash) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) GetTaskOutputHash(opts *bind.CallOpts, batchIndex uint32, programId []byte, taskInputHash []byte) ([32]byte, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "getTaskOutputHash", batchIndex, programId, taskInputHash)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetTaskOutputHash is a free data retrieval call binding the contract method 0x2c3b965f.
//
// Solidity: function getTaskOutputHash(uint32 batchIndex, bytes programId, bytes taskInputHash) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) GetTaskOutputHash(batchIndex uint32, programId []byte, taskInputHash []byte) ([32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetTaskOutputHash(&_ContractLambadaCoprocessorTaskManager.CallOpts, batchIndex, programId, taskInputHash)
}

// GetTaskOutputHash is a free data retrieval call binding the contract method 0x2c3b965f.
//
// Solidity: function getTaskOutputHash(uint32 batchIndex, bytes programId, bytes taskInputHash) view returns(bytes32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) GetTaskOutputHash(batchIndex uint32, programId []byte, taskInputHash []byte) ([32]byte, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.GetTaskOutputHash(&_ContractLambadaCoprocessorTaskManager.CallOpts, batchIndex, programId, taskInputHash)
}

// NextBatchIndex is a free data retrieval call binding the contract method 0x7e4fa700.
//
// Solidity: function nextBatchIndex() view returns(uint32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) NextBatchIndex(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "nextBatchIndex")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// NextBatchIndex is a free data retrieval call binding the contract method 0x7e4fa700.
//
// Solidity: function nextBatchIndex() view returns(uint32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) NextBatchIndex() (uint32, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.NextBatchIndex(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// NextBatchIndex is a free data retrieval call binding the contract method 0x7e4fa700.
//
// Solidity: function nextBatchIndex() view returns(uint32)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) NextBatchIndex() (uint32, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.NextBatchIndex(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Owner() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Owner(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) Owner() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Owner(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Paused(index uint8) (bool, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Paused(&_ContractLambadaCoprocessorTaskManager.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) Paused(index uint8) (bool, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Paused(&_ContractLambadaCoprocessorTaskManager.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Paused0() (*big.Int, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Paused0(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) Paused0() (*big.Int, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Paused0(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) PauserRegistry() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.PauserRegistry(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.PauserRegistry(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RegistryCoordinator(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RegistryCoordinator(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) StakeRegistry() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.StakeRegistry(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.StakeRegistry(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) StaleStakesForbidden(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "staleStakesForbidden")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) StaleStakesForbidden() (bool, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.StaleStakesForbidden(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) StaleStakesForbidden() (bool, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.StaleStakesForbidden(&_ContractLambadaCoprocessorTaskManager.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractLambadaCoprocessorTaskManager.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.TrySignatureAndApkVerification(&_ContractLambadaCoprocessorTaskManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.TrySignatureAndApkVerification(&_ContractLambadaCoprocessorTaskManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// Initialize is a paid mutator transaction binding the contract method 0xf8c8765e.
//
// Solidity: function initialize(address _pauserRegistry, address initialOwner, address _aggregator, address _generator) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) Initialize(opts *bind.TransactOpts, _pauserRegistry common.Address, initialOwner common.Address, _aggregator common.Address, _generator common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "initialize", _pauserRegistry, initialOwner, _aggregator, _generator)
}

// Initialize is a paid mutator transaction binding the contract method 0xf8c8765e.
//
// Solidity: function initialize(address _pauserRegistry, address initialOwner, address _aggregator, address _generator) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Initialize(_pauserRegistry common.Address, initialOwner common.Address, _aggregator common.Address, _generator common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Initialize(&_ContractLambadaCoprocessorTaskManager.TransactOpts, _pauserRegistry, initialOwner, _aggregator, _generator)
}

// Initialize is a paid mutator transaction binding the contract method 0xf8c8765e.
//
// Solidity: function initialize(address _pauserRegistry, address initialOwner, address _aggregator, address _generator) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) Initialize(_pauserRegistry common.Address, initialOwner common.Address, _aggregator common.Address, _generator common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Initialize(&_ContractLambadaCoprocessorTaskManager.TransactOpts, _pauserRegistry, initialOwner, _aggregator, _generator)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Pause(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Pause(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) PauseAll() (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.PauseAll(&_ContractLambadaCoprocessorTaskManager.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.PauseAll(&_ContractLambadaCoprocessorTaskManager.TransactOpts)
}

// RegisterNewTaskBatch is a paid mutator transaction binding the contract method 0xfa36f60c.
//
// Solidity: function registerNewTaskBatch(bytes32 batchRoot, uint32 quorumThresholdPercentage, bytes quorumNumbers) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) RegisterNewTaskBatch(opts *bind.TransactOpts, batchRoot [32]byte, quorumThresholdPercentage uint32, quorumNumbers []byte) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "registerNewTaskBatch", batchRoot, quorumThresholdPercentage, quorumNumbers)
}

// RegisterNewTaskBatch is a paid mutator transaction binding the contract method 0xfa36f60c.
//
// Solidity: function registerNewTaskBatch(bytes32 batchRoot, uint32 quorumThresholdPercentage, bytes quorumNumbers) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) RegisterNewTaskBatch(batchRoot [32]byte, quorumThresholdPercentage uint32, quorumNumbers []byte) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RegisterNewTaskBatch(&_ContractLambadaCoprocessorTaskManager.TransactOpts, batchRoot, quorumThresholdPercentage, quorumNumbers)
}

// RegisterNewTaskBatch is a paid mutator transaction binding the contract method 0xfa36f60c.
//
// Solidity: function registerNewTaskBatch(bytes32 batchRoot, uint32 quorumThresholdPercentage, bytes quorumNumbers) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) RegisterNewTaskBatch(batchRoot [32]byte, quorumThresholdPercentage uint32, quorumNumbers []byte) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RegisterNewTaskBatch(&_ContractLambadaCoprocessorTaskManager.TransactOpts, batchRoot, quorumThresholdPercentage, quorumNumbers)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RenounceOwnership(&_ContractLambadaCoprocessorTaskManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RenounceOwnership(&_ContractLambadaCoprocessorTaskManager.TransactOpts)
}

// RespondTask is a paid mutator transaction binding the contract method 0x3e6a9264.
//
// Solidity: function respondTask((uint32,uint32,bytes32,bytes,uint32) batch, (bytes,bytes) task, bytes32[] taskProof, (bytes32) taskResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) RespondTask(opts *bind.TransactOpts, batch ILambadaCoprocessorTaskManagerTaskBatch, task ILambadaCoprocessorTaskManagerTask, taskProof [][32]byte, taskResponse ILambadaCoprocessorTaskManagerTaskResponse, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "respondTask", batch, task, taskProof, taskResponse, nonSignerStakesAndSignature)
}

// RespondTask is a paid mutator transaction binding the contract method 0x3e6a9264.
//
// Solidity: function respondTask((uint32,uint32,bytes32,bytes,uint32) batch, (bytes,bytes) task, bytes32[] taskProof, (bytes32) taskResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) RespondTask(batch ILambadaCoprocessorTaskManagerTaskBatch, task ILambadaCoprocessorTaskManagerTask, taskProof [][32]byte, taskResponse ILambadaCoprocessorTaskManagerTaskResponse, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RespondTask(&_ContractLambadaCoprocessorTaskManager.TransactOpts, batch, task, taskProof, taskResponse, nonSignerStakesAndSignature)
}

// RespondTask is a paid mutator transaction binding the contract method 0x3e6a9264.
//
// Solidity: function respondTask((uint32,uint32,bytes32,bytes,uint32) batch, (bytes,bytes) task, bytes32[] taskProof, (bytes32) taskResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) RespondTask(batch ILambadaCoprocessorTaskManagerTaskBatch, task ILambadaCoprocessorTaskManagerTask, taskProof [][32]byte, taskResponse ILambadaCoprocessorTaskManagerTaskResponse, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.RespondTask(&_ContractLambadaCoprocessorTaskManager.TransactOpts, batch, task, taskProof, taskResponse, nonSignerStakesAndSignature)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.SetPauserRegistry(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.SetPauserRegistry(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newPauserRegistry)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "setStaleStakesForbidden", value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.SetStaleStakesForbidden(&_ContractLambadaCoprocessorTaskManager.TransactOpts, value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.SetStaleStakesForbidden(&_ContractLambadaCoprocessorTaskManager.TransactOpts, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.TransferOwnership(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.TransferOwnership(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Unpause(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractLambadaCoprocessorTaskManager.Contract.Unpause(&_ContractLambadaCoprocessorTaskManager.TransactOpts, newPausedStatus)
}

// ContractLambadaCoprocessorTaskManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerInitializedIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerInitialized represents a Initialized event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractLambadaCoprocessorTaskManagerInitializedIterator, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerInitializedIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerInitialized)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParseInitialized(log types.Log) (*ContractLambadaCoprocessorTaskManagerInitialized, error) {
	event := new(ContractLambadaCoprocessorTaskManagerInitialized)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractLambadaCoprocessorTaskManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerOwnershipTransferredIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractLambadaCoprocessorTaskManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerOwnershipTransferredIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerOwnershipTransferred)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractLambadaCoprocessorTaskManagerOwnershipTransferred, error) {
	event := new(ContractLambadaCoprocessorTaskManagerOwnershipTransferred)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractLambadaCoprocessorTaskManagerPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerPausedIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerPaused represents a Paused event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractLambadaCoprocessorTaskManagerPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerPausedIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerPaused)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParsePaused(log types.Log) (*ContractLambadaCoprocessorTaskManagerPaused, error) {
	event := new(ContractLambadaCoprocessorTaskManagerPaused)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractLambadaCoprocessorTaskManagerPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerPauserRegistrySetIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerPauserRegistrySet represents a PauserRegistrySet event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractLambadaCoprocessorTaskManagerPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerPauserRegistrySetIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerPauserRegistrySet)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParsePauserRegistrySet(log types.Log) (*ContractLambadaCoprocessorTaskManagerPauserRegistrySet, error) {
	event := new(ContractLambadaCoprocessorTaskManagerPauserRegistrySet)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdateIterator is returned from FilterStaleStakesForbiddenUpdate and is used to iterate over the raw logs and unpacked data for StaleStakesForbiddenUpdate events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdateIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate represents a StaleStakesForbiddenUpdate event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate struct {
	Value bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterStaleStakesForbiddenUpdate is a free log retrieval operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdateIterator, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdateIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "StaleStakesForbiddenUpdate", logs: logs, sub: sub}, nil
}

// WatchStaleStakesForbiddenUpdate is a free log subscription operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStaleStakesForbiddenUpdate is a log parse operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate, error) {
	event := new(ContractLambadaCoprocessorTaskManagerStaleStakesForbiddenUpdate)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractLambadaCoprocessorTaskManagerTaskBatchRegisteredIterator is returned from FilterTaskBatchRegistered and is used to iterate over the raw logs and unpacked data for TaskBatchRegistered events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerTaskBatchRegisteredIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerTaskBatchRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerTaskBatchRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerTaskBatchRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerTaskBatchRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerTaskBatchRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerTaskBatchRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerTaskBatchRegistered represents a TaskBatchRegistered event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerTaskBatchRegistered struct {
	Batch ILambadaCoprocessorTaskManagerTaskBatch
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTaskBatchRegistered is a free log retrieval operation binding the contract event 0x9e93280875f7d0d786d58b17dfd709c5bd47d7802bf3ecc67d4ce2b9a8a7bd95.
//
// Solidity: event TaskBatchRegistered((uint32,uint32,bytes32,bytes,uint32) batch)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterTaskBatchRegistered(opts *bind.FilterOpts) (*ContractLambadaCoprocessorTaskManagerTaskBatchRegisteredIterator, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "TaskBatchRegistered")
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerTaskBatchRegisteredIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "TaskBatchRegistered", logs: logs, sub: sub}, nil
}

// WatchTaskBatchRegistered is a free log subscription operation binding the contract event 0x9e93280875f7d0d786d58b17dfd709c5bd47d7802bf3ecc67d4ce2b9a8a7bd95.
//
// Solidity: event TaskBatchRegistered((uint32,uint32,bytes32,bytes,uint32) batch)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchTaskBatchRegistered(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerTaskBatchRegistered) (event.Subscription, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "TaskBatchRegistered")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerTaskBatchRegistered)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "TaskBatchRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskBatchRegistered is a log parse operation binding the contract event 0x9e93280875f7d0d786d58b17dfd709c5bd47d7802bf3ecc67d4ce2b9a8a7bd95.
//
// Solidity: event TaskBatchRegistered((uint32,uint32,bytes32,bytes,uint32) batch)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParseTaskBatchRegistered(log types.Log) (*ContractLambadaCoprocessorTaskManagerTaskBatchRegistered, error) {
	event := new(ContractLambadaCoprocessorTaskManagerTaskBatchRegistered)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "TaskBatchRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractLambadaCoprocessorTaskManagerTaskRespondedIterator is returned from FilterTaskResponded and is used to iterate over the raw logs and unpacked data for TaskResponded events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerTaskRespondedIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerTaskResponded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerTaskRespondedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerTaskResponded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerTaskResponded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerTaskRespondedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerTaskRespondedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerTaskResponded represents a TaskResponded event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerTaskResponded struct {
	ResponseMetaHash [32]byte
	Response         ILambadaCoprocessorTaskManagerTaskResponse
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterTaskResponded is a free log retrieval operation binding the contract event 0x334f2eec82b2de26c7d6111736c88a27183cd06471c7d4dbd4f84b4964175a10.
//
// Solidity: event TaskResponded(bytes32 responseMetaHash, (bytes32) response)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterTaskResponded(opts *bind.FilterOpts) (*ContractLambadaCoprocessorTaskManagerTaskRespondedIterator, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "TaskResponded")
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerTaskRespondedIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "TaskResponded", logs: logs, sub: sub}, nil
}

// WatchTaskResponded is a free log subscription operation binding the contract event 0x334f2eec82b2de26c7d6111736c88a27183cd06471c7d4dbd4f84b4964175a10.
//
// Solidity: event TaskResponded(bytes32 responseMetaHash, (bytes32) response)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchTaskResponded(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerTaskResponded) (event.Subscription, error) {

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "TaskResponded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerTaskResponded)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "TaskResponded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskResponded is a log parse operation binding the contract event 0x334f2eec82b2de26c7d6111736c88a27183cd06471c7d4dbd4f84b4964175a10.
//
// Solidity: event TaskResponded(bytes32 responseMetaHash, (bytes32) response)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParseTaskResponded(log types.Log) (*ContractLambadaCoprocessorTaskManagerTaskResponded, error) {
	event := new(ContractLambadaCoprocessorTaskManagerTaskResponded)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "TaskResponded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractLambadaCoprocessorTaskManagerUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerUnpausedIterator struct {
	Event *ContractLambadaCoprocessorTaskManagerUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractLambadaCoprocessorTaskManagerUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractLambadaCoprocessorTaskManagerUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractLambadaCoprocessorTaskManagerUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractLambadaCoprocessorTaskManagerUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractLambadaCoprocessorTaskManagerUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractLambadaCoprocessorTaskManagerUnpaused represents a Unpaused event raised by the ContractLambadaCoprocessorTaskManager contract.
type ContractLambadaCoprocessorTaskManagerUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractLambadaCoprocessorTaskManagerUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractLambadaCoprocessorTaskManagerUnpausedIterator{contract: _ContractLambadaCoprocessorTaskManager.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractLambadaCoprocessorTaskManagerUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractLambadaCoprocessorTaskManager.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractLambadaCoprocessorTaskManagerUnpaused)
				if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractLambadaCoprocessorTaskManager *ContractLambadaCoprocessorTaskManagerFilterer) ParseUnpaused(log types.Log) (*ContractLambadaCoprocessorTaskManagerUnpaused, error) {
	event := new(ContractLambadaCoprocessorTaskManagerUnpaused)
	if err := _ContractLambadaCoprocessorTaskManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
