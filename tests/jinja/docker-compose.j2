version: "3"

networks:
  lambada-coprocessor-network:
    name: lambada-coprocessor-network
    driver: bridge

services:

  anvil:
    build:
      context: .
      dockerfile: Dockerfile-anvil
    container_name: anvil
    ports:
      - 8545:8545
    entrypoint: anvil
    volumes:
      - ./tests/anvil/avs-and-eigenlayer-deployed-anvil-state.json:/root/.anvil/state.json
    command: --host 0.0.0.0 --load-state /root/.anvil/state.json
    networks:
      - lambada-coprocessor-network

  aggregator:
    build:
      context: .
      dockerfile: aggregator.Dockerfile
    container_name: lambada-coprocessor-aggregator
    ports:
      - 8080:8080
    depends_on:
      anvil:
        condition: service_started
    volumes:
      - ./:/lambada-coprocessor/
    working_dir: /lambada-coprocessor
    command: 
      - --config 
      - tests/nodes/aggregator/aggregator-docker-compose.yaml
      - --credible-squaring-deployment 
      - contracts/script/output/lambada_coprocessor_deployment_output_devnet.json
      - --ecdsa-private-key 
      - "0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6"
    networks:
      - lambada-coprocessor-network
{% for operator in operators %}
  {{ operator.machine }}:
    image: ghcr.io/zippiehq/cartesi-lambada:amd64-latest
    container_name: lambada-coprocessor-{{ operator.machine }}
    volumes:
      - ./{{ operator.machine_data }}:/data
      - ./machine/data-preload:/data/preload
    networks:
      - lambada-coprocessor-network
    environment:
      - COMPUTE_ONLY=1

  {{ operator.name }}:
    build:
      context: .
      dockerfile: operator.Dockerfile
    container_name: lambada-coprocessor-{{ operator.name }}
    depends_on:
      anvil:
        condition: service_started
      aggregator:
        condition: service_started
      machine1:
        condition: service_started
    volumes:
      - ./:/lambada-coprocessor/
    working_dir: /lambada-coprocessor
    command: {{ operator.run_script }}
    networks:
      - lambada-coprocessor-network
{% endfor %}